/* tslint:disable */
/* eslint-disable */
/**
 * App example
 * The app API description
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import {
  DefaultResponseDto,
  DefaultResponseDtoFromJSON,
  DefaultResponseDtoToJSON,
  UpdateUserDto,
  UpdateUserDtoFromJSON,
  UpdateUserDtoToJSON,
  UserDto,
  UserDtoFromJSON,
  UserDtoToJSON,
  ValidationErrorDto,
  ValidationErrorDtoFromJSON,
  ValidationErrorDtoToJSON,
} from '../models';

export interface UpdateUserRequest {
  updateUserDto: UpdateUserDto;
}

/**
 *
 */
export class UserssProfileApi extends runtime.BaseAPI {
  /**
   * Retrive a user by id.
   */
  async findUserByIdRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<UserDto>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/users/profile`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => UserDtoFromJSON(jsonValue));
  }

  /**
   * Retrive a user by id.
   */
  async findUserById(initOverrides?: RequestInit): Promise<UserDto> {
    const response = await this.findUserByIdRaw(initOverrides);
    return await response.value();
  }

  /**
   * Update an existing user.
   */
  async updateUserRaw(
    requestParameters: UpdateUserRequest,
    initOverrides?: RequestInit,
  ): Promise<runtime.ApiResponse<void>> {
    if (requestParameters.updateUserDto === null || requestParameters.updateUserDto === undefined) {
      throw new runtime.RequiredError(
        'updateUserDto',
        'Required parameter requestParameters.updateUserDto was null or undefined when calling updateUser.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/api/users/profile`,
        method: 'PUT',
        headers: headerParameters,
        query: queryParameters,
        body: UpdateUserDtoToJSON(requestParameters.updateUserDto),
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * Update an existing user.
   */
  async updateUser(requestParameters: UpdateUserRequest, initOverrides?: RequestInit): Promise<void> {
    await this.updateUserRaw(requestParameters, initOverrides);
  }
}
