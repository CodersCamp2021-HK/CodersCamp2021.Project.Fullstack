/* tslint:disable */
/* eslint-disable */
/**
 * App example
 * The app API description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface ArticlesControllerCreateArticleRequest {
    body: object;
}

export interface ArticlesControllerGetArticleRequest {
    id: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     */
    async articlesControllerCreateArticleRaw(requestParameters: ArticlesControllerCreateArticleRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling articlesControllerCreateArticle.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/articles`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async articlesControllerCreateArticle(requestParameters: ArticlesControllerCreateArticleRequest, initOverrides?: RequestInit): Promise<void> {
        await this.articlesControllerCreateArticleRaw(requestParameters, initOverrides);
    }

    /**
     */
    async articlesControllerGetArticleRaw(requestParameters: ArticlesControllerGetArticleRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling articlesControllerGetArticle.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/articles/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async articlesControllerGetArticle(requestParameters: ArticlesControllerGetArticleRequest, initOverrides?: RequestInit): Promise<void> {
        await this.articlesControllerGetArticleRaw(requestParameters, initOverrides);
    }

    /**
     */
    async articlesControllerGetArticlesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/articles`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async articlesControllerGetArticles(initOverrides?: RequestInit): Promise<void> {
        await this.articlesControllerGetArticlesRaw(initOverrides);
    }

}
