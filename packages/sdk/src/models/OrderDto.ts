/* tslint:disable */
/* eslint-disable */
/**
 * JeszCoChcesz API üç≤üçùüçú
 * JeszCoChcesz is an online food delivery system connecting restaurants with health-conscious users.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { SubOrderDto, SubOrderDtoFromJSON, SubOrderDtoFromJSONTyped, SubOrderDtoToJSON } from './SubOrderDto';

/**
 *
 * @export
 * @interface OrderDto
 */
export interface OrderDto {
  /**
   *
   * @type {string}
   * @memberof OrderDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof OrderDto
   */
  addressId: string;
  /**
   *
   * @type {string}
   * @memberof OrderDto
   */
  userId: string;
  /**
   *
   * @type {number}
   * @memberof OrderDto
   */
  hourStart: number;
  /**
   *
   * @type {number}
   * @memberof OrderDto
   */
  hourEnd: number;
  /**
   *
   * @type {Date}
   * @memberof OrderDto
   */
  date: Date;
  /**
   *
   * @type {Array<SubOrderDto>}
   * @memberof OrderDto
   */
  subOrders: Array<SubOrderDto>;
  /**
   *
   * @type {string}
   * @memberof OrderDto
   */
  comment?: string;
}

export function OrderDtoFromJSON(json: any): OrderDto {
  return OrderDtoFromJSONTyped(json, false);
}

export function OrderDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    addressId: json['addressId'],
    userId: json['userId'],
    hourStart: json['hourStart'],
    hourEnd: json['hourEnd'],
    date: new Date(json['date']),
    subOrders: (json['subOrders'] as Array<any>).map(SubOrderDtoFromJSON),
    comment: !exists(json, 'comment') ? undefined : json['comment'],
  };
}

export function OrderDtoToJSON(value?: OrderDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    addressId: value.addressId,
    userId: value.userId,
    hourStart: value.hourStart,
    hourEnd: value.hourEnd,
    date: value.date.toISOString(),
    subOrders: (value.subOrders as Array<any>).map(SubOrderDtoToJSON),
    comment: value.comment,
  };
}
