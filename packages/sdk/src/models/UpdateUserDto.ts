/* tslint:disable */
/* eslint-disable */
/**
 * App example
 * The app API description
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  FavouriteDishDto,
  FavouriteDishDtoFromJSON,
  FavouriteDishDtoFromJSONTyped,
  FavouriteDishDtoToJSON,
} from './FavouriteDishDto';
import {
  FavouriteRestaurantDto,
  FavouriteRestaurantDtoFromJSON,
  FavouriteRestaurantDtoFromJSONTyped,
  FavouriteRestaurantDtoToJSON,
} from './FavouriteRestaurantDto';

/**
 *
 * @export
 * @interface UpdateUserDto
 */
export interface UpdateUserDto {
  /**
   *
   * @type {string}
   * @memberof UpdateUserDto
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateUserDto
   */
  surname?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateUserDto
   */
  phoneNumber?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateUserDto
   */
  addressId?: Array<string>;
  /**
   *
   * @type {Array<FavouriteRestaurantDto>}
   * @memberof UpdateUserDto
   */
  favouriteRestaurants: Array<FavouriteRestaurantDto>;
  /**
   *
   * @type {Array<FavouriteDishDto>}
   * @memberof UpdateUserDto
   */
  favouriteDishes: Array<FavouriteDishDto>;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateUserDto
   */
  orders: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof UpdateUserDto
   */
  profileCompleted: boolean;
}

export function UpdateUserDtoFromJSON(json: any): UpdateUserDto {
  return UpdateUserDtoFromJSONTyped(json, false);
}

export function UpdateUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, 'name') ? undefined : json['name'],
    surname: !exists(json, 'surname') ? undefined : json['surname'],
    phoneNumber: !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
    addressId: !exists(json, 'addressId') ? undefined : json['addressId'],
    favouriteRestaurants: (json['favouriteRestaurants'] as Array<any>).map(FavouriteRestaurantDtoFromJSON),
    favouriteDishes: (json['favouriteDishes'] as Array<any>).map(FavouriteDishDtoFromJSON),
    orders: json['orders'],
    profileCompleted: json['profileCompleted'],
  };
}

export function UpdateUserDtoToJSON(value?: UpdateUserDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    surname: value.surname,
    phoneNumber: value.phoneNumber,
    addressId: value.addressId,
    favouriteRestaurants: (value.favouriteRestaurants as Array<any>).map(FavouriteRestaurantDtoToJSON),
    favouriteDishes: (value.favouriteDishes as Array<any>).map(FavouriteDishDtoToJSON),
    orders: value.orders,
    profileCompleted: value.profileCompleted,
  };
}
