/* tslint:disable */
/* eslint-disable */
/**
 * JeszCoChcesz API üç≤üçùüçú
 * JeszCoChcesz is an online food delivery system connecting restaurants with health-conscious users.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  ErrorDetailsDto,
  ErrorDetailsDtoFromJSON,
  ErrorDetailsDtoFromJSONTyped,
  ErrorDetailsDtoToJSON,
} from './ErrorDetailsDto';

/**
 *
 * @export
 * @interface ValidationErrorDto
 */
export interface ValidationErrorDto {
  /**
   *
   * @type {string}
   * @memberof ValidationErrorDto
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof ValidationErrorDto
   */
  status: string;
  /**
   *
   * @type {string}
   * @memberof ValidationErrorDto
   */
  path: string;
  /**
   *
   * @type {string}
   * @memberof ValidationErrorDto
   */
  message?: string;
  /**
   *
   * @type {Array<ErrorDetailsDto>}
   * @memberof ValidationErrorDto
   */
  errors?: Array<ErrorDetailsDto>;
}

export function ValidationErrorDtoFromJSON(json: any): ValidationErrorDto {
  return ValidationErrorDtoFromJSONTyped(json, false);
}

export function ValidationErrorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json['name'],
    status: json['status'],
    path: json['path'],
    message: !exists(json, 'message') ? undefined : json['message'],
    errors: !exists(json, 'errors') ? undefined : (json['errors'] as Array<any>).map(ErrorDetailsDtoFromJSON),
  };
}

export function ValidationErrorDtoToJSON(value?: ValidationErrorDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    status: value.status,
    path: value.path,
    message: value.message,
    errors: value.errors === undefined ? undefined : (value.errors as Array<any>).map(ErrorDetailsDtoToJSON),
  };
}
